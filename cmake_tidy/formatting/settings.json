{
  "title": "JSON schema for the cmake-tidy settings",
  "$schema": "http://json-schema.org/draft-06/schema#",
  "type": "object",
  "properties": {
    "succeeding_newlines": {
      "type": "integer",
      "description": "Describes the maximum number of succeeding newlines that can appear in formatted file"
    },
    "tabs_as_spaces": {
      "type": "boolean",
      "description": "Indentation in the code should be done by spaces (True) or tabs (False)"
    },
    "tab_size": {
      "type": "integer",
      "description": "Size of one tab in spaces"
    },
    "force_command_lowercase": {
      "type": "boolean",
      "description": "Convert all command invocations to lowercase eg. \"SET()\" to \"set()\""
    },
    "space_between_command_and_begin_parentheses": {
      "type": "boolean",
      "description": "Insert space between command name and begin parentheses eg. \"if()\" to \"if ()\""
    },
    "line_length": {
      "type": "integer",
      "description": "Maximum line length that will not be splitted"
    },
    "wrap_short_invocations_to_single_line": {
      "type": "boolean",
      "description": "Wrap multiline command invocations that fit into single line"
    },
    "closing_parentheses_in_newline_when_split": {
      "type": "boolean",
      "description": "Move closing parentheses of command invocation to new line when split"
    },
    "unquoted_uppercase_as_keyword": {
      "type": "boolean",
      "description": "Treat unquoted uppercase arguments as keywords"
    },
    "space_after_loop_condition": {
      "type": "boolean",
      "description": "Introduce spaces after all conditional invocations only"
    },
    "keep_property_and_value_in_one_line": {
      "type": "boolean",
      "description": "Keep properties and its value within single line - doesn't split over multiple line"
    },
    "keyword_and_single_value_in_one_line": {
      "type": "boolean",
      "description": "Keep in single line property/keyword with single value"
    },
    "keep_command_in_single_line": {
      "type": "boolean",
      "description": "add_custom_target COMMAND will be forced to stay in one line"
    },
    "condition_splitting_move_and_or_to_newline": {
      "type": "boolean",
      "description": "When splitting conditional invocation - move AND/OR to newline"
    },
    "keywords": {
      "type": "array",
      "description": "Array of unquoted arguments to be treated as keywords"
    }
  },
  "propertyNames": {
    "type": "string",
    "enum": [
      "succeeding_newlines",
      "tabs_as_spaces",
      "tab_size",
      "force_command_lowercase",
      "space_between_command_and_begin_parentheses",
      "line_length",
      "wrap_short_invocations_to_single_line",
      "closing_parentheses_in_newline_when_split",
      "unquoted_uppercase_as_keyword",
      "space_after_loop_condition",
      "keep_property_and_value_in_one_line",
      "keyword_and_single_value_in_one_line",
      "keep_command_in_single_line",
      "condition_splitting_move_and_or_to_newline",
      "keywords"
    ]
  }
}
